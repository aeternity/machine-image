version: 2.1

references:
  infrastructure_config: &infrastructure_config
    docker:
      - image: aeternity/infrastructure

  fail_notification: &fail_notification
    run:
      name: Send failure notification
      environment:
        NOTIFY_BRANCH: master
        HOOK_TEMPLATE: |
          {
            "text": "CircleCI (machine-image) job **%s** failed on branch **%s** by @%s",
            "attachments": [
              {
                "title": "Build Link",
                "title_link": "%s",
                "color": "#FAD6D6"
              }
            ]
          }
      command: |
        HOOK_DATA=$(printf "$HOOK_TEMPLATE" "${CIRCLE_JOB:?}" "${CIRCLE_BRANCH:?}" "${CIRCLE_USERNAME:-unknown}" "${CIRCLE_BUILD_URL:?}")
        curl -X POST -H 'Content-Type: application/json' ${ROCKET_HOOK_URL:?} --data "${HOOK_DATA:?}"
      when: on_fail

commands:
  setup_secrets:
    steps:
      - run:
          name: Setup environment secrets
          command: cd /infrastructure && make secrets SECRETS_OUTPUT_DIR=/secrets

jobs:
  test:
    <<: *infrastructure_config
    steps:
      - checkout
      - setup_secrets
      - run:
          name: Validate packer configuration
          command: envdir /secrets packer validate packer/aeternity.json

  build:
    <<: *infrastructure_config
    steps:
      - checkout
      - setup_secrets
      - run:
          name: Build and publish images
          no_output_timeout: 2h
          command: envdir /secrets packer build packer/aeternity.json
      - run:
          name: Cleanup old AMIs
          command: envdir /secrets python packer/scripts/ami-cleanup.py
      - *fail_notification

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test:
          context: ae-machine-images
          requires: []

      - build:
          context: ae-machine-images
          requires:
            - test
          filters:
            branches:
              only: master
